<html>
<head><meta http-equiv="content-type" content="text/html;charset=utf-8">
<title>Mooreiana</title>
<link href="https://www.jsoftware.com/papers/adoc.css" rel=stylesheet>
</head>

<body>

<br>
<p align=center><font size=+3>Mooreiana</font>
<font size=-2><br><br></font>
<b><tt>http://www.jsoftware.com/papers/Mooreiana.htm</tt></b></p>

<p align=center>A selection from 
<a target=APLQAx href="http://www.jsoftware.com/papers/APLQA.htm"><i>APL 
Quotations and Anecdotes</i></a> 
of items involving Roger Moore.
</p>

<p align=center><img src="https://www.jsoftware.com/papers/APLimg/Roger_D._Moore_(2005).jpg" width=161 height=206></img></p>



<table align=center width=550>

<tr><td colspan=3>
<hr><br>
</td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="LBM"></a>
Talk about starting at the top. Working for and with Ken Iverson 
was my first job out of college. 
Roger [Moore] and I were introduced to Iverson Notation 
at the same SRI chalk talk. 
I didn&rsquo;t do anything with it at the time, 
but a while later an IBM maverick technical guy 
and <a href="Mooreiana.htm#APL_Blossom_Time">rhyming philosopher</a>, Michael Montalbano, 
started hanging around Stanford&rsquo;s brand-new computer science department. 
He was writing
<a target=APLQAx href="http://www.jsoftware.com/papers/KEIQA.htm#Montalbano">linear programming algorithms</a>
in the Notation, then hand-translating them into FORTRAN 
for his business-school students. 
He gave some informal lectures on the Notation; 
Phil Abrams and I attended enthusiastically.</p>

<p>IBM announced the IBM System/360 on April 7, 1964. 
Shortly after, Mike handed me a new <i>IBM Systems Journal</i>
that had articles by the System/360 architects — and holy cow, 
one by Ken Iverson, Adin Falkoff, and Ed Sussenguth 
that precisely defined the whole 360 line in 18 pages of Notation, 
plus commentary: &ldquo;A Formal Description of System/360.&rdquo;</p>

<p>Phil and I devoured it. 
Once past the steepest part of the learning curve, 
we gave a series of seminars to other students. 
I found a few typos, which I mailed to Ken.</p>

<p>Then Ken came to visit, touring several institutions 
to talk about the Formal Description and his notation. 
I listened, argued once or twice, and handed over my latest errata. 
Ken thanked me, and said,
&ldquo;Larry, these are pretty minor. 
Why don&rsquo;t you find something seriously wrong?&rdquo;</p>

<p>Nothing could have fired me up like that challenge. 
I scoured the article. Late at night I sat in bed, 
with the fold-out pages resting 
over my recent bride&rsquo;s 
nose (a nuisance) and eyes (appreciated). 
I got lucky. 
The Memory Access program had a race condition between requests 
from the Processor and Channel programs.</p>

<p>Next day at lunch I showed Ken what I&rsquo;d found. 
Mid-afternoon Mike came by my office. 
&ldquo;Larry, Ken&rsquo;s taking the Lord&rsquo;s name in vain. 
He came back from lunch saying &lsquo;That sonofabitch Breed! 
Why didn&rsquo;t we talk to him 
before we published this god-damned thing?&rsquo; &rdquo; 
And I knew that I had to go to work for him.</p>

<p align=right>&#151;
Larry Breed, 
comment in <a target=APLQAx href="http://lathwellproductions.ca/wordpress//2011/11/27/its-apls-birthday-or-is-it/#comment-3004"><i>It&rsquo;s APL&rsquo;s Birthday, or is it?</i></a>, 
2012-02-21
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="scheduler"></a>
In a time-sharing system, 
the key to good performance lies in the way 
the external storage devices are used.  
Here the contrast between the TSS and APL systems 
was most remarkable.  
On TSS, one could look through the glass windows 
of the disk devices and watch the motion of the arms. 
These jerked rapidly back and forth, 
swooping over wide areas of the disk faces, 
with the appearance of someone in the grip 
of St. Vitus&rsquo; dance.  
On the APL disks, one arm would be moving quite regularly, 
like the escapement mechanism of a clock, 
as it went from one track to the adjacent track, 
then to the next track, and so on, 
over fifty or so tracks in several seconds, 
and then retracted to the beginning and 
started the cycle over again.  
Sometimes the total excursion was more, sometimes less;  
it was so regular 
that an experienced person like Roger Moore, 
who was principally responsible for the APL supervisor, 
could tell how many users were signed on by watching it.</p>

<p align=right>&#151;
Eugene McDonnell, 
<a target=APLQAx href="http://www.jsoftware.com/papers/eem/socio.htm"><i>The Socio-Technical Beginnings of APL</i></a>, 1979
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="IPSA"></a>
I.P. Sharp Associates was founded by the 
<a target=APLQAx href="http://en.wikipedia.org/wiki/Ferranti-Packard_6000">FP6000</a> 
programming team and one other in 1964.
Directors: Ian Sharp, Roger Moore, Ted McDorman, and Don Smith;
three others: David Oldacre, Brian Daly, and James McSherry.
The preceding seven joined in December 1964 at various dates.
In spring 1965, David Butler, an engineer from the non-FP6000 part of Electronics Division, joined.
Butler was more interested in military business than any other employee.</p>

<p>Ian, Brian, and Jim McS painted the new office at DeMarco Building at Keele &amp; Lawrence.</p>

<p align=right>&#151;
Roger Moore
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="punch_cards"></a>Roger Moore
was returning from the US to Canada.
The customs officer at the border questioned him about 
some boxes of punch cards in his possession.
Roger avoided further complications by explaining
to the officer that the punch cards were <i>used</i> rather than new.</p>

<p align=right>&#151;
Ian Sharp
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="implementers"></a>
The ACM Grace Murray Hopper Award is given 
to the outstanding young computer professional of the year, 
selected on the basis of a single recent major technical or service contribution. 
The candidate must have been 35 years of age or less 
at the time the qualifying contribution was made.</p>

<p>The 1973 Grace Murray Hopper Award goes to Larry Breed, Richard Lathwell, and Roger Moore, 
for their work in the design and implementation of <i>APL</i>\360, 
setting new standards in simplicity, efficiency, reliability and response time 
for interactive systems.</p>

<p align=right>&#151;
ACM,
<a target=APLQAx href="http://awards.acm.org/hopper/all.cfm"><i>Grace Murray Hopper Award</i></a>
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="Hofstadter"></a>
In January of 1973, when I was 27 years old, I was a graduate student in physics.  
A few months earlier, I had taken some time off from the University of Oregon 
in Eugene and had moved to New York City.  
I spent the fall semester there taking physics courses at CCNY 
while supporting myself by teaching &ldquo;Physics for Nurses&rdquo; 
at Hunter College on the Upper East Side of Manhattan.  
However, by the end of the fall term, 
I decided I should return to Eugene and complete my Ph.D. there.  
The previous summer, I&rsquo;d driven cross-country in my silver-colored 1956 Mercury Monterey, 
which I affectionately called &ldquo;Q&rdquo;, 
short for &ldquo;quicksilver&rdquo; 
(an ancient word meaning &ldquo;mercury&rdquo;) &mdash; 
shown in <a target=APLQAx href="https://www.jsoftware.com/papers/APL_Q.htm">two attached photos</a>, one taken way back in 1971, 
and the other in 2006 (yes, I still own Q today!)  
So, back to our tale &#133; 
I was now taking Q (or rather, Q was now taking me) back the other way &mdash; 
back across the amber waves of grain, the purple mountains&rsquo; majesty, 
across the fruited plain, from sea to shining sea.
</p>

<p>Q and I tended to drive very late at night, and one night 
in the middle of darkest Iowa, 
at about 1 AM, there was a sudden extremely intense downpour, 
so I stopped at a truck stop to wait it out.  
Under the bright lights I had a coffee, and when the storm had somewhat abated, 
I went back out to Q and started off again.  
It was still raining, but not nearly as hard.  
Right as I was about to get back onto the freeway, 
I spied a rather pathetic totally drenched figure standing on the side of the road thumbing a ride, 
and he looked young and not in the least threatening, 
so I pulled on the reins of my steel steed and came to a halt, 
and told the sopping-wet fellow to hop in.  
He was probably in his late twenties, like me, 
and he had red hair, unlike me, and at that most wet juncture in his life, 
he was very relieved to get a ride.</p>

<p>So we got to talking, and after a while 
I mentioned that I had grown up on the Stanford campus.  
My traveling companion said that his brother had been at Stanford some years earlier, 
so naturally I asked what his brother had studied there, 
and he said that he was a computer person.  
Back in those days, this was an incredible rarity. 
In fact, Stanford had only one single computer when I, 
as a high-school kid, had started programming it, in 1960.  
So I said, &ldquo;And what was his name?&rdquo;  
And my still-shivering seatmate replied, &ldquo;Roger Moore&rdquo;.</p>

<p>Well, what do you know &mdash; Roger Moore!  
I remembered good old red-haired Roger extremely vividly 
from my undergraduate days at Stanford, in the early sixties.  
Back then, there was a small coterie of recursion-crazed math nuts &mdash;
today they would be called &ldquo;geeks&rdquo; or &ldquo;nerds&rdquo;, 
but back then those words did not exist &mdash; 
who hung around all day and all night in the basement of Encina Hall, 
where the legendary Burroughs 220 was located, 
and who talked endlessly about the subtleties and beauties of <font size=-1>ALGOL</font>
(a brand-new computer language of the time, and truly <font size=-1>ALGOL</font> 
was a wonderful and important breakthrough in computer science).  
This delightful, nerdy band included my friends 
Larry Breed, Larry Tesler, Charlie Brenner, Roger Moore, 
Bill Strachan, and myself (and probably a couple of others, but, like Q, 
my memory is a wee bit rusty after all these decades).</p>

<p>So of all things, in the middle of my life in the middle of a storm 
in the middle of the night in the middle of nowhere 
in the middle of the North American continent, 
Q and I had picked up the brother 
of someone I had hung out with some ten years earlier.  
Small world indeed.</p>

<p align=right>&#151;
Douglas Hofstadter, <i>A Q Tale</i>, 2009 
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="execute_remainder"></a>
I was allowed to use the Stanford computer (IBM 650) 
when I was in high school. 
That was thanks to Prof. George Forsythe (mathematician, 
founder of the computer science department at Stanford,
founding editor of the Journal of the ACM) 
who introduced some of us to computers at the weekly 
Tuesday Joe Berg Science Seminar series at Palo Alto High School. 
Probably in 1961, the summer before I matriculated 
as a regular student, I met Roger Moore. 
By that time the computation center was in the basement 
of Encina Hall and the computer had been upgraded to a Burroughs 220 
whose <font size=-1>ALGOL</font>-inspired <font size=-1>BALGOL</font> 
compiler was our main programming tool. 
We regulars who hung out there knew the compiler&rsquo;s quirks 
inside and out even to the extent of some putatively 
illegal syntax constructions that would slip 
through the parser and potentially do something useful. 
Roger reached into my punched card box 
on the shelf of the make-ready room and took a look at my handiwork. 
What he saw must have been obscure programming 
on my part no doubt intended to save a few bytes or milliseconds. 
Good natured but a little snidely he summarized his feeling: 
&ldquo;Ah, very clever. 
Floating point divide and execute the remainder.&rdquo;
</p>
<p align=right>&#151;
Charles Brenner 
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="sum_bits"></a>
&#133; Al Rose, a vice president of STSC,
called on Roger Moore,
a vice president of I.P. Sharp,
to improve the speed of Boolean summation.
Moore had reasons of his own 
for wanting to do this, so he agreed.
His analysis of the problem was faily subtle,
and he managed to gain more efficiency
in more areas than the original problem called for,
but we will concentrate here on the essentials
of his solution of the basic problem.</p>

<p>The heart of the technique 
was exploitation of the Translate instruction,
peculiar to the architecture 
of the IBM System/360 line of computers.
The Translate instruction is able to replace
as many as 256 eight-bit bytes of data
in storage by the same number of other bytes.
Each byte of the first argument is used to
select a byte from the second argument,
which then replaces the byte of the first argument.
Considering the elements of the two arguments
as integers in the range 0-255,
one could define the Translate instruction
by the expression<tt> a←b[a]</tt>&nbsp;,<tt> </tt>
where the length of<tt> a </tt>
is 256 elements or less,
and the length of<tt> b </tt>
is at least<tt> ⌈/a</tt>&nbsp;.<tt> </tt>
The reason Translate is in the System/360
set of instructions is to convert
data from one transmission code to another,
but that is not what Moore used it for.
Instead, he put into<tt> b </tt>elements
which gave the count of the number of bits
in the corresponding elements of<tt> a</tt>&nbsp;.<tt> </tt>
For example, if the entry in<tt> a </tt>
were<tt> 01110110 </tt>
(which, considered as a base-2 number is 118),
entry 118 in<tt> b </tt>
would be<tt> 00000101</tt>&nbsp;,<tt> </tt>
since there are five 1-bits
in the element of<tt> a</tt>&nbsp;,<tt> </tt>
and<tt> 00000101</tt>&nbsp;,<tt> </tt>
considered as a base-2 number,
has the value 5.</p>

<p>With this translate table in hand,
it was a relatively simple matter
to take a Boolean array,
translate the bytes of its rows
to the corresponding bit count,
and then sum the translated bytes.
Suppose, for example, that a 32-element
Boolean vector<tt> v </tt>is represented
in the computer memory by the four bytes:</p>

<pre>
   11010110 00100011 01111101 00101101
</pre>

<p>These would be translated to the four bytes:</p>

<pre>
   00000101 00000011 00000110 00000100
</pre>

<p>which are the binary representations
of the numbers 5, 3, 6, and 4, respectively.
These four numbers could be summed by a Load
and three Adds,
to give the desired sum 18.
Thus with one Translate, one Load, and three Adds
it is possible to do what otherwise
took 32 Translations, one Load, and 31 Adds.
Actually Moore&rsquo;s strategy 
was more sophisticated than this,
so that he was able to 
handle<tt> ^/</tt>&nbsp;,<tt> ∨/</tt>&nbsp;,<tt> ≠/</tt>&nbsp;,<tt> </tt>
and<tt> =/ </tt>with the same code,
and his code is considerably faster than
even this analysis would indicate,
but that isn&rsquo;t part of the present story.</p>

<p>So successful was this technique that
when IBM&rsquo;s new high-performance VS APL system
was announced in 1975,
the Plus-Reduction on the I.P. Sharp and
STSC systems was still twice as fast as that
of VS APL. &#133;</p>

<p align=right>&#151;
Eugene McDonnell, 
<a target=APLQAx href="http://www.jsoftware.com/papers/eem/qq111.htm"><i>Sum 
of the Bits</i></a>, 1980-09<p>

<p>[<i>Editor note</i>: &ldquo;Considerably faster
than even this analysis would indicate&rdquo; 
perhaps worked by exploiting the fact that the byte counts, 
taken four at a time as &ldquo;full word integers&rdquo;, 
can be summed four at a time (&ldquo;in parallel&rdquo;),
up to<tt> ⌊255÷8 (=31) </tt>times without overflowing
the individual counts.
See the J Wiki essay
<a target=APLQAx href="https://code.jsoftware.com/wiki/Essays/Sum_of_a_Bit_Array"><i>Sum
of a Bit Array</i></a> for more details.]
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="photo"></a>
<a target=APLQAx href="https://www.jsoftware.com/papers/APL_originators.htm"><img src="https://www.jsoftware.com/papers/APLimg/APL_originators.jpg" width=500 height=400></a>
<br>
(L to R) Dick Lathwell, Ken Iverson, Roger Moore, Adin Falkoff, Phil Abrams, and Larry Breed. 
(On the extreme left in the background: Jon McGrew.) 
Taken in the I.P. Sharp Associates hospitality suite 
during the 1978 APL Users Meeting in Toronto, Canada.</p>

<p>A slightly different version of this photo appeared 
on the front page of 
the I.P. Sharp Newsletter, 1978-11 to -12, volume 6, number 6.
The caption on the photo had the following sentence:
It is believed to be the first time all six &ldquo;originators of APL&rdquo;
have been in the same place at the same time;
it is probably the first time that all six have worn jackets and ties
simultaneously and the first time Ken and Adin have been observed
to smile simultaneously.
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="RBE"></a>
How I got my job at IPSA. It began with a conversation between me and a headhunter.</p>

<table>
<tr><td>Me: &nbsp;</td><td>I want to work on compilers.</td></tr>
<tr><td>Me:</td><td>I want to work my own hours.</td></tr>
<tr><td>Me:</td><td>I don&rsquo;t want to have to wear a suit.</td></tr>
<tr><td>Me:</td><td>I don&rsquo;t care what it pays.</td></tr>
<tr><td>HH:</td><td>There is only one place in town like that.</td></tr>
</table>

<p>I interviewed with Ian, who seemed satisfied, 
but he told me, &ldquo;You&rsquo;ll have to talk with Roger.&rdquo;
He made it sound as if Roger was some sort of demigod.
Which was not far from the truth.
I was led to an elfin, rumpled-looking character
who was smoking a cigarette and staring and muttering at a listing.
Roger Moore.</p>

<p>I introduced myself and said Ian had sent me over about 
the compiler job.
Roger was more interested in the problem than in me, I think.
I got frustrated sitting there, while he smoked and muttered and
looked at the code, so I asked him to explain the problem
to me, then pitched in. I don&rsquo;t recall what we were
looking at; it was probably the IPSCOBOL compiler code.
After an hour or so, I said I had to leave to go on another interview,
so I asked him where we stood on the job.
&ldquo;Oh, oh, yeah, I guess we can use you.&rdquo;</p>

<p>Generating IPSCOBOL test cases was part of the job. 
The more interesting part was analyzing the compiler output for correctness.
Both of those tasks screamed for automation, which led to my
learning APL.</p>

<p align=right>&#151;
Bob Bernecky
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="magic_touch"></a>
In 1975 or 1976, IPSA installed a faster IBM mainframe 
for their SHARP APL timesharing service.  
On the first day on this machine, 
I (in Calgary) happened to enter an expression involving<tt> ⌹ </tt>
and generated a system error with a register dump and everything.  
Seemingly in no time flat Roger Moore (in Toronto) 
was on the case and fixed the problem.  
He then inquired of Lib Gibson, IPSA Calgary branch manager, 
re who was the person with the magic touch.  
Lib replied that it was Roger the summer student, 
adding that having a magic touch was a characteristic of all Rogers.</p>

<p align=right>&#151;
Roger Hui
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="modems"></a>
Modem technology introduced around 1960 was the Western Electric 103A. 
It used frequency shift keying and could run at 300 baud. 
Original terminals were 2741s and clones at 134.5 baud. 
I cannot remember exactly when ASCII support was introduced. 
APL ASCII was helped by the daisy wheel printer technology which ran at 30 cps 
(provided you didn&rsquo;t feed it 
with wrong character sequences like<tt> N⍴'E0'</tt>).
</p>

<p>Prior to IPSANET it was expensive to provide 300 bps service outside of Toronto. 
A wider bandwidth time-division multiplex channel was required which increased costs. 
With packet switching support for higher speeds became possible. 
I think IPSA was widely deployed in 1978 
(check <a target=APLQAx href="http://rogerdmoore.ca/INF">rogerdmoore.ca/INF</a>) 
with 134.5/300 bps autospeed ports on the Alpha and 3705. 
Checking May/June 1978 network topology 
suggests that TDM links were gone in 1978.</p>

<p>1978 was during the Vadic <i>v</i> WE 212A wars.  
Both provided 1200 bps over dial-up lines; 
only Vadic could be acoustically coupled. 
I think there were some 1200 bps network ports in 1978. 
As these ports became more common, 
we discovered that the exact Alpha hardware configured did not really support 1200 bps. 
I spend a couple of weeks looking the source of the problem. 
The problem was associated the bloody awful transmit shutdown scheme 
in the Advanced [<i>sic</i>] Micro Device 9551 chip.  
Commercial async chips (unlike IBM 3705) 
were incapable of transmitting an invisible idle 
(start bit at mark and data=all marks). 
With the 9551 turning off transmit mode immediately jammed transmit data at mark. 
This meant Alpha software had to send two dummy characters 
after last character from a packet. 
In normal 9551 transmit operation a new character was requested 
in the middle of stop bit transmission.  
For a characters other than last Alpha hardware 
would supply a new character in between instructions. 
When count expired on the data transfer there was an interrupt. 
If interrupt was serviced by shutting down transmit mode 
while the stop bit was being transmitted, everything was OK. 
If interrupt service was delayed then transmission 
of start bit of next character would start. 
A small delay would result in a visible blip on transmit data 
which would probably be ignored by the modem. 
Transmitting half of the start bit would be visible to modem and end user. 
Thus delay of interrupt by (1/1200 sec) would guarantee a noise character at user terminal. 
Shorter delay might give garbage.</p>

<p>Solution was global switch to Intel 8251 chip 
which had a much more civilized approach 
to transmit shutdown. 
With 8251, shutting down transmit mode disabled further requests for more characters 
but allowed buffered characters in chip (usually two) to be transmitted. 
This network wide hardware change 
which occurred one node at a time was required to properly support 1200 bps.</p>

<p align=right>&#151;
Roger Moore
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="APL_Blossom_Time"></a>
<b>APL Blossom Time &mdash; A History in Verse</b></p> 

<p>A nostalgic reminiscence of the early days of APL, remembered to the tune of
<i>The Battle of New Orleans</i>.</p>

<table>
<tr><td colspan=2>Back in the old days, in 1962,<br>
A feller named Ken Iverson decided what to do.<br>
He gathered all the papers he&rsquo;d been writing fer a spell<br>
And he put them in a little book and called it APL.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td valign=top>Well&#133;&nbsp;</td><td><p>
    He got him a jot and he got him a ravel<br>
    And he revved his compression up as high as she could go<br>
    And he did some reduction and he did some expansion<br>
    And he sheltered all his numbers with a ceiling and a flo&rsquo;.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td colspan=2>Now Sussenguth and Falkoff, they thought it would be fine<br> 
To use the new notation to describe the product line.<br> 
They got with Dr. Iverson and went behind the scenes<br> 
And wrote a clear description of a batch of new machines.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td valign=top>Well&#133;</td><td><p>
   They wrote down dots and they wrote down squiggles<br>
   And they wrote down symbols that they didn&rsquo;t even know<br>
   And they wrote down questions when they didn&rsquo;t know the answer<br>
   And they made the Systems Journal in nineteen sixty-fo&rsquo;<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td colspan=2>Now writing dots and squiggles is a mighty pleasant task<br>
But it doesn&rsquo;t answer questions that a lot of people ask.<br>
Ken needed an interpreter for folks who couldn&rsquo;t read<br>
So he hiked to Californ-i-a to talk to Larry Breed.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td valign=top>Oh&#133;</td><td><p>
   He got Larry Breed and he got Phil Abrams<br> 
   And they started coding FORTRAN just as fast as they could go<br> 
   And they punched up cards and ran them through the reader<br> 
   In Stanford, Palo Alto, on the seventy-ninety-oh.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td colspan=2>Well a FORTRAN batch interpreter&rsquo;s a mighty awesome thing<br> 
But while it hums a pretty tune it doesn&rsquo;t really sing.<br> 
The thing that we all had to have to make our lives sublime<br> 
Was an interactive program that would let us share the time.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td valign=top>Oh&#133;</td><td><p>
   They got Roger Moore and they got Dick Lathwell,<br>
   And they got Gene McDonnell with his carets and his sticks,<br> 
   And you should&rsquo;ve heard the uproar in the Hudson River valley<br>
   When they saved the first<tt> CLEANSPACE </tt>in 1966.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td colspan=2>Well, when Al Rose saw this he took a little ride<br> 
In a big station wagon with a type ball by his side.<br> 
He did a lot of teaching and he had a lot of fun<br>
With an old, bent, beat-up 2741.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td valign=top>Oh&#133;</td><td><p>
   It typed out stars and it typed out circles<br> 
   And it twisted and it wiggled just like a living thing.<br> 
   Al fed it a tape when he couldn&rsquo;t get a phone line<br>
   And it purred like a tiger with its trainer in the ring.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td colspan=2>Now, there&rsquo;s much more to the story, but I just don&rsquo;t have the time <br>
(And I doubt you have the patience) for an even longer rhyme.<br>
So I&rsquo;m ending this first chapter of the tale I hope to tell<br>
Of how Iverson&rsquo;s notation blossomed into APL.<br>
<font size=-3>&nbsp;</font></td></tr>

<tr><td valign=top>So&#133;</td><td><p>
Keep writing nands when you&rsquo;re not writing neithers,<br> 
   And point with an arrow to the place you want to be,<br> 
   But don&rsquo;t forget to bless those early APL sources<br>
   Who preserved the little seedling that became an APL tree.<br>
<font size=-3>&nbsp;</font></td></tr>
</table>

<p>Dedicated to the pioneers of APL with respect and
affection by J.C.L. Guest</p>

<p align=right>&#151;
Mike Montalbano, 
<a target=APLQAx href="http://ed-thelen.org/comp-hist/APL-hist.html"><i>A Personal History of APL</i></a>,
Appendix A:<br>
APL Blossom Time, 1982-10
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="azz"></a>
However, all was not grim in those early years,
and one gets an insight into the sense of humor
which still abounds in the APL world.
The Great Inner Products Contest was announced
in the January 15, 1971 issue.
Readers were encouraged to submit their
&ldquo;favorite and most expressive use
of the inner product&rdquo;.
Among the so-called rules of the competition:</p>

<table><tr><td width=28 nowrap>&nbsp;</td><td>
<p>The entry<tt> +.× </tt>is not permitted except
by management and APL salesmen.</p>

<p>Explaining<tt> ×.+ </tt>places you in a special
category.</p>
</td></tr></table>

<p>Volume II, Number 6, March 17, 1971 reveals that
the APL community could meet challenge with characteristic
tongue-in-cheek:</p>

<table><tr><td width=28 nowrap>&nbsp;</td><td>
<p>The most interesting [entry] was from Roger Moore,
I.P. Sharp Associates, Toronto, who points out that
the &ldquo;new improved&rdquo; 5732-XM6 or 5736-XM6
executing<tt> ⍴B∧.=⍉B←500&nbsp;1⍴1 </tt>in a CLEAR WS
produces a register dump and a SYSTEM ERROR.
He suggested that a call to the QUEND macro 
be inserted immediately after card 5272 of
APLSVDOP in order to &ldquo;destroy&rdquo;
his interesting inner product entry. 
His Post Script that another call to the QUEND
macro after card 3712 in the same assembly fixes
the bug encountered when something like<tt> ∧/125000&nbsp;1⍴1 </tt>
is attempted.  (Way to go IBM!)</p>
</td></tr></table>

<p>Not all was fun and games, however.
Mike Jenkins introduced the new matrix inversion primitive,
domino, to the APL community in Volume III, Number 4,
February 10, 1972.  This landmark paper is often referred to,
and can still be used today to gain insight into this function.
And domino can be used in interesting and mysterious ways, too.
At the [APL82] meeting in Heidelberg, Timo Seppälä of TMT-Team Oy,
Helsinki, was asking people if they knew the shortest expression 
for computing the average of a vector.
(Think about it and then look for the answer at the end
of this introduction.)</p>

<p align=right>&#151;
Arlene Azzarello,
<a target=APLQAx href="http://www.jsoftware.com/papers/QQ_Early_Years.htm"><i>APL QUOTE-QUAD: The Early Years</i></a>, 
1982-11.
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="APL85_puzzle"></a>
<a target=APLQAx href="https://www.jsoftware.com/papers/APL85jigsaw.htm">
<img src="https://www.jsoftware.com/papers/APLimg/APL85jigsaw.jpg" width=200 height=268 align=left hspace=8></img></a>
The &ldquo;goodies bag&rdquo; for the APL85 conference
in Seattle included a jigsaw puzzle of about 1000 pieces.
The pattern (composed by Paul Berry) 
consisted of APL error messages in various
natural languages and <nobr>&ldquo;APL &rsquo;85&rdquo;</nobr> 
rendered in large yellow strokes, interpersed in a
random matrix of APL characters.
As is customary, the pattern on the puzzle itself
was reproduced on the box.
I did not open this trophy for a long time,
and when I rejoined IPSA in 1986 I left it
on a table in my office, unopened.</p>

<p>Roger Moore was in the adjacent office,
and he&rsquo;d occasionally drop by to 
discuss the network shared variables work he was doing with 
my office mate Richard Potyok.
On such occasions he would (I later realized)
look longingly at the unopened puzzle,
but he was too gentlemanly to
say anything.</p>

<p>On Friday 1986-06-29 I finally opened the puzzle
and started to work on it.  Roger soon noticed
and immediately pitched in.
We made short work of the parts with the
APL error messages and of course 
the big &ldquo;APL &rsquo;85&rdquo; was pretty easy.
The remaining random APL characters proved more challenging.</p>

<p>After a while Roger derived a better method 
than random search:
first, sort the remaining puzzle pieces
according to the characters around the 
domino<tt> </tt>(<tt>⌹</tt>)<tt> </tt>character.
(He printed out<tt> ⎕av </tt>to use in the sorting.)
Then, find a domino character on the box,
look at the characters around it,
and locate the correct puzzle piece in the
sorted piles of puzzle pieces.
Why<tt> ⌹</tt>&nbsp;?<tt> </tt>It is the character
with &ldquo;the most ink&rdquo;, such that it is
easier to recognize a fragment of that character
on a puzzle piece than any other character.
Using this method, the puzzle was almost done by 
Saturday evening and finished soon thereafter.</p>

<p align=right>&#151;
Roger Hui
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="hobo"></a>
The new receptionist at IPSA headquarters in downtown Toronto
reported with alarm that &ldquo;a hobo had just walked into the office&rdquo;.
That&rsquo;s not a hobo, we reassured her, 
that&rsquo;s our vice president.</p>

<p align=right>&#151;
Cam Linton
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="in_charge_of"></a>
Roger Moore was a vice president of I.P. Sharp Associates.  
What were Roger&rsquo;s responsibilities as vice president?  
I&rsquo;ve heard it said by different people that 
&ldquo;Roger Moore is the vice president in charge of Roger Moore&rdquo;.</p>

<p align=right>&#151;
Roger Hui
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="shirt_and_tie"></a>
In the 1990s I used to ride my bike on the Martin Goodman Trail or 
the Sunnyside Boardwalk on the shores of Lake Ontario.  
Sometimes I would see Roger Moore on the trail, also on a bike.  
You can tell it&rsquo;s Roger from a ways off 
because only he would be wearing a short-sleeve white shirt and tie.</p>

<p>More recently (2016), Roger has been 
<a target=APLQAx href="http://web.archive.org/web/20180430021543/http://bpi.1e6.com/files/RDMplaysPokeMon.mp4">seen playing <i>Pokémon Go</i></a>
while wearing shirt and tie.</p>

<p align=right>&#151;
Roger Hui
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="APLore"></a>
If an item in 
<a target=APLQAx href="http://www.jsoftware.com/papers/KEIQA.htm"><i>Ken Iverson Quotations and Anecdotes</i></a>
is a &ldquo;Kenecdote&rdquo; (per Eugene McDonnell), 
and an item in 
<a target=APLQAx href="http://www.jsoftware.com/papers/eem/anecdotes.htm"><i>Eugene McDonnell Quotations and Anecdotes</i></a>
is a &ldquo;Genecdote&rdquo;,
what is an item in <i>this</i> collection?
I propose that it be called an &ldquo;APLore&rdquo; 
(pronounced &ldquo;apple lore&rdquo;).</p>

<p>I learned just today that 
<a target=APLQAx href="http://www.jsoftware.com/papers/Mooreiana.htm">&ldquo;Mooreiana&rdquo;</a>
was what Eugene had been calling the collection
of Roger Moore stories since 1986 or earlier.  
The possibilities are endless!
<nobr>Tuttle-Tales,</nobr> 
<a target=APLQAx href="http://johnscholes.rip/scholisms/">Scholisms</a>, 
Krombergers, Hui-Stories, &#133;</p>

<p align=right>&#151;
Roger Hui
<br>&nbsp;</p></td></tr>



<tr><td valign=top>&#149;</td><td>&nbsp;</td><td>
<p><a name="IPSA50"></a>
Excerpts from a presentation to the IPSA50 party, 2014-10-05.</p>

<table>
<td valign=top nowrap>&#149; &nbsp;</td><td>
Remember the 80s? When our line to Europe was 9600 baud?  
I have 2000 times that bandwidth to my house. 
The 80s. When Joey saved 9 years of email in 82 megabytes.
Now we get that in a day.
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
I remember when Jane and I had a business meeting in Winnipeg. 
IPSA&rsquo;s famous frugality dictated we share a hotel room. 
Jane arrived after me, unlocked the door and called out,
&ldquo;I&rsquo;m coming to get you!&rdquo; 
It was the wrong room. 
A man wearing only a towel took one look at this willowy redhead 
and responded, &ldquo;I certainly hope so!&rdquo;
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
I remember asking Arthur Whitney to wear clean, 
ironed pants and shirt for an important demo. 
Arthur blew them away. 
When I thanked him for dressing properly someone said, 
&ldquo;Didn&rsquo;t you notice he had NO SHOES?&rdquo; 
You have to be VERY explicit with programmers.
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
I remember arguments with Eric that he <i>consistently</i> won &mdash; 
even though I was <i>consistently</i> RIGHT!
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
And I remember Roger.
His office with six feet of printouts &mdash; 
totally redundant, because Roger with his photographic memory knew 
Every. Single. Line. Of code.  
There&rsquo;s the legend of Roger in a Regina bar realizing he&rsquo;d 
forgotten his house key, and drawing it for a locksmith to cut a replacement.
It worked.
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
I remember Roger advising a customer to connect 
pins 4 and 7 on their 3705. 
The uneasy customer called the IBM development team.  
&ldquo;Who told you to do a stupid thing like that?&rdquo; 
&ldquo;Roger Moore&rdquo;. 
&ldquo;Oh well that&rsquo;s OK, 
Roger knows more about this device than we do.&rdquo;
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
I remember one night a customer phoned the London office for APL help, 
was given a quick solution, and 
asked, &ldquo;Who is this? I want to mention you to the boss.&rdquo;<br>
&ldquo;My name is Ian Sharp.&rdquo;<br>
&ldquo;Wow, must be handy to have a name like that.&rdquo;<br>
&ldquo;It is,&rdquo; Ian replied without further elaboration.<br>
Fred Perkins got a laugh the next morning.
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
I remember people urging Ian to dump a painful, 
overdue Morgan Stanley project. There was no contractual penalty. 
But we gave our word, said Ian. 
That was the end of that.
 <td></tr>
<td valign=top nowrap>&#149; &nbsp;</td><td>
Ian didn&rsquo;t stand on policy; he operated on trust.  
When I applied to Sharp, I asked about sick leave. Ian looked perplexed. 
&ldquo;When you&rsquo;re sick, you stay home.&rdquo; 
I persisted. &ldquo;How LONG can I stay home?&rdquo; 
Even more perplexed, Ian said, &ldquo;Until you&rsquo;re better.&rdquo; <td></tr>
</table>

<p align=right>&#151;
Lib Gibson,
<a target=APLQAx href="http://www.jsoftware.com/papers/IPSA50.htm"><i>IPSA50</i></a>,
2014-10-04
<br>&nbsp;</p></td></tr>

<tr><td colspan=3>
<br><hr>
</td></tr>
</table>


<a name="personae"></a>
<p align=center><b><i>Dramatis Person&aelig;</i></b></p>

<table align=center>
<tr><td valign=top nowrap>
Phil Abrams <br>
Arlene Azzarello <br>
Joe Berg <br>
Bob Bernecky <br>
Paul Berry <br>
Larry Breed <br>
Charles Brenner <br>
William Burroughs <br>
David Butler <br>
Brian Daly <br>
Adin Falkoff <br>
S.Z. de Ferranti <br>
George Forsythe <br>
Lib Gibson <br>
God <br>
Martin Goodman <br>
Douglas Hofstadter <br>
Grace Murray Hopper <br>
Henry Hudson <br>

</td> <td>&nbsp;</td> <td valign=top nowrap>
Roger Hui <br>
Thomas Hunter <br>
Eric Iverson <br>
Ken Iverson <br>
Mike Jenkins <br>
William Keele <br>
Morten Kromberg <br>
Dick Lathwell <br>
Jacob Lawrence <br>
Cam Linton <br>
Eugene McDonnell <br>
Ted McDorman <br>
James McSherry <br>
Jane Minett <br>
Mike Montalbano <br>
Jeff Moore <br>
Roger Moore <br>
Henry Morgan <br>

</td> <td>&nbsp;</td> <td valign=top nowrap>
David Oldacre <br>
Fred Perkins <br>
Richard Potyok <br>
Al Rose <br>
John Scholes <br>
Timo Seppälä <br>
Ian Sharp <br>
Eugene Skinner <br>
Don Smith <br>
Leland Stanford Jr. <br>
Harold Stanley <br>
Bill Strachan <br>
Ed Sussenguth <br>
Larry Tesler <br>
Joey Tuttle <br>
Queen Victoria <br>
St. Vitus <br>
Arther Whitney <br>

</td> </tr>
</table>



<table align=center width=550><tr><td>

<br><hr>

<p><font size=-1>Compiled and edited by Roger Hui.</font></p>

<p><font size=-1>
<script src="https://www.jsoftware.com/papers/apldisplay.js" type="text/javascript"></script>
</font></p>

<table>
<tr><td><font size=-1>created: &nbsp;</font></td><td><font size=-1>2010-09-18 12:00</font></td></tr>
<tr><td><font size=-1>updated:</font></td><td><font size=-1>2019-04-22 16:55</font></td></tr>
</table>
</tr></td></table>

<br><br>


</body>
</html>
