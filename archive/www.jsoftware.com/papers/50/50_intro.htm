<html>
<head><meta http-equiv="content-type" content="text/html;charset=utf-8">
<title>A History of APL in 50 Functions</title>
<link href="adoc.css" rel=stylesheet></head>
<body>

<p align=right><font size=+1>
<a target=main href="50_ack.htm">&lt;&lt;</a> &nbsp; 
<a target=main href="50_00.htm">&gt;&gt;</a>
</font></p>

<table width=520 align=center><tr><td>

<a name="intro"></a>
<p align=center><font size=+3>A History of APL in 50 Functions</font><br><br>
<font size=+2>Roger K.W. Hui</font>
<br>&nbsp;</p>

<table>

<tr><td>We believe that the design of APL was also affected in important respects 
by a number of procedures and circumstances. 
Firstly, from its inception APL has been developed by <i>using</i> it in a succession of areas. 
This emphasis on application clearly favors practicality and simplicity. 
The treatment of many different areas fostered generalization &#133;</td></tr>
<tr><td align=right>&mdash; Falkoff and Iverson, <i>The Design of APL</i>, 1973
<acronym title="Falkoff, Adin D., and Iverson, Kenneth E., The Design of APL, IBM Journal of Research and Development, volume 17, number 4, 1973-07; &sect;1.">[0a]</acronym>
 </td></tr>

<tr><td>&nbsp;</td></tr>

<tr><td>The mathematician&rsquo;s patterns, like the painter&rsquo;s 
or the poet&rsquo;s must be <i>beautiful</i>; 
the ideas like the colours or the words, must fit together in a harmonious way. 
Beauty is the first test: 
there is no permanent place in the world for ugly mathematics.
</td></tr>
<tr><td align=right>&mdash; G.H. Hardy, 
<i>A Mathematician&rsquo;s Apology</i></a>, 1940
<acronym title="Hardy, G.H. A Mathematician’s Apology, Cambridge University Press, 1940-11.">[1]</acronym>
 </td></tr>

<tr><td>&nbsp;</td></tr>

<tr><td>Such were the vagaries of what may have been the most powerful computer 
language ever hatched by a Canadian.
Yes, I know that James Gosling, an alumnus of the University of Calgary, 
was the &ldquo;father of Java.&rdquo; He and I have talked about it. 
And yes, there is a now a game called &ldquo;Perl Golf&rdquo; in which 
you try to do the most work in that scripting language with the fewest number of (key-) strokes. 
Java and Perl are good and useful and popular, but APL was &#133; beautiful.
 </td></tr>
<tr><td align=right>&mdash; Tom Keenan, 
<i>Business Edge</i>, 2004
<acronym title="Keenan, Tom, IT seeks to recapture lustre in career market, BusinessEdge, volume 4, number 39, 2004-11-04 to -10.">[2]</acronym>
 </td></tr>
</table>

<p align=center>
&#149; &nbsp; &nbsp; &nbsp; &nbsp; 
&#149; &nbsp; &nbsp; &nbsp; &nbsp; 
&#149; &nbsp; &nbsp; &nbsp; &nbsp; 
&#149; &nbsp; &nbsp; &nbsp; &nbsp; 
&#149; &nbsp; &nbsp; &nbsp; &nbsp; 
&#149; &nbsp; &nbsp; &nbsp; &nbsp; 
&#149;</p>

<p>APL will be 50 years old in November 2016 
(50 years from 1966-11-27 22.53.58 <font size=-1>UTC</font>,
<a target=50x href="../APLQA.htm#APL_birthday">to be exact</a>), 
and it remains unsurpassed 
in manifesting Kenneth E. Iverson&rsquo;s 
five important characteristics of notation
<acronym title="Iverson, Kenneth E., Notation as a Tool of Thought, Communications of the ACM, volume 23, number 8, 1980-08.">[3]</acronym>:

<ul>
<li>ease of expression</li>
<li>suggestivity</li>
<li>subordination of detail</li>
<li>economy</li>
<li>amenability to proof</li>
</ul>

<p>Herewith, in the best traditions of &ldquo;A History of x in 50/100 y&rdquo;,

<p align=center>
<img width=89 height=144 src="img/photo50.jpg"> &nbsp;
<img width=89 height=144 src="img/boston50.jpg"> &nbsp;
<img width=89 height=144 src="img/wall50.jpg"></p>

<p align=center>
<img width=89 height=144 src="img/world100.jpg"> &nbsp;
<img width=89 height=144 src="img/food100.jpg">
<img width=89 height=144 src="img/arch100.jpg"> &nbsp;
<img width=89 height=144 src="img/war100.jpg"> &nbsp;
</p>

<p>and in honor and in celebration of the 50-th anniversary of APL,
these characteristics are demonstrated through
50 APL functions.
They span the 50 year history of APL.
The first sixteen are updated and expanded versions of
what appeared in <i>Sixteen APL Amuse-Bouches</i> 
<acronym title="Hui, Roger K.W., Sixteen APL Amuse-Bouches, Vector, volume 26, number 4, 2016-03.">[4]</acronym>.
A different subset of them was presented as 
<i>A Tour (de Force) of APL in 16 Expressions</i>
[<acronym title="Hui, Roger K.W., A Tour (de Force) of APL in 16 Expressions, Dyalog User Meeting, 2016-10-09.">5</acronym>, 
<acronym title="Hui, Roger K.W., A Tour (de Force) of APL in 16 Expressions, Functional Conf 2016, 2016-10-15.">6</acronym>].
Many of the others are translations of ideas which germinated in the 
J dialect
<acronym title="Jsoftware J Wiki Essays, 2007-2016.">[7]</acronym>.
</p>

<p>The APL functions require the
environment specified in
<a href="50_fine.htm">The Fine Print</a>.
<br>&nbsp;</p>

</td></tr></table>

<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
</body>
</html>
